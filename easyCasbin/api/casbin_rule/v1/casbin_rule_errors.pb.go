// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// 内部错误
func IsInternalErr(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == CasbinRuleError_INTERNAL_ERR.String() && e.Code == 500
}

// 内部错误
func ErrorInternalErr(format string, args ...interface{}) *errors.Error {
	return errors.New(500, CasbinRuleError_INTERNAL_ERR.String(), fmt.Sprintf(format, args...))
}

// 域不存在
func IsDomainNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == CasbinRuleError_DOMAIN_NOT_FOUND.String() && e.Code == 404
}

// 域不存在
func ErrorDomainNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, CasbinRuleError_DOMAIN_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

// 参数错误
func IsInvalidArgs(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == CasbinRuleError_INVALID_ARGS.String() && e.Code == 400
}

// 参数错误
func ErrorInvalidArgs(format string, args ...interface{}) *errors.Error {
	return errors.New(400, CasbinRuleError_INVALID_ARGS.String(), fmt.Sprintf(format, args...))
}
