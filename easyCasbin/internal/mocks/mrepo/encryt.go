// Code generated by MockGen. DO NOT EDIT.
// Source: easyCasbin/internal/biz (interfaces: EncryptService)

// Package mrepo is a generated GoMock package.
package mrepo

import (
	context "context"
	biz "easyCasbin/internal/biz"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEncryptService is a mock of EncryptService interface.
type MockEncryptService struct {
	ctrl     *gomock.Controller
	recorder *MockEncryptServiceMockRecorder
}

// MockEncryptServiceMockRecorder is the mock recorder for MockEncryptService.
type MockEncryptServiceMockRecorder struct {
	mock *MockEncryptService
}

// NewMockEncryptService creates a new mock instance.
func NewMockEncryptService(ctrl *gomock.Controller) *MockEncryptService {
	mock := &MockEncryptService{ctrl: ctrl}
	mock.recorder = &MockEncryptServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEncryptService) EXPECT() *MockEncryptServiceMockRecorder {
	return m.recorder
}

// CheckPassword mocks base method.
func (m *MockEncryptService) CheckPassword(arg0 context.Context, arg1, arg2 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPassword", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckPassword indicates an expected call of CheckPassword.
func (mr *MockEncryptServiceMockRecorder) CheckPassword(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPassword", reflect.TypeOf((*MockEncryptService)(nil).CheckPassword), arg0, arg1, arg2)
}

// Token mocks base method.
func (m *MockEncryptService) Token(arg0 context.Context, arg1 *biz.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Token", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Token indicates an expected call of Token.
func (mr *MockEncryptServiceMockRecorder) Token(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Token", reflect.TypeOf((*MockEncryptService)(nil).Token), arg0, arg1)
}
